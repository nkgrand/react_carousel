{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","step","frameSize","itemwidth","animationDuration","move","previousSlide","setState","currentState","scroll","getMinScroll","images","props","length","getMaxScroll","nextSlide","this","marginLeft","className","type","disabled","onClick","style","width","transform","transition","map","imgUrl","src","alt","htmlFor","name","id","min","max","value","onChange","event","target","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50c40275.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n};\n\ntype State = {\n  step: number,\n  frameSize: number,\n  itemwidth: number,\n  animationDuration: number,\n  move: number,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state: State = {\n    step: 3,\n    frameSize: 3,\n    itemwidth: 130,\n    animationDuration: 1000,\n    move: 0,\n  };\n\n  previousSlide = () => {\n    this.setState((currentState) => {\n      const scroll = currentState.move - (currentState.step * currentState.itemwidth);\n\n      return {\n        move: scroll < 0 ? 0 : scroll,\n      };\n    });\n  };\n\n  getMinScroll = () => {\n    const { images } = this.props;\n    const { step, itemwidth } = this.state;\n\n    return (images.length * itemwidth) + (step * itemwidth);\n  };\n\n  getMaxScroll = () => {\n    const { images } = this.props;\n    const { step, itemwidth } = this.state;\n\n    return (images.length * itemwidth) - (step * itemwidth);\n  };\n\n  nextSlide = () => {\n    this.setState((currentState) => {\n      const scroll = currentState.move + (currentState.step * currentState.itemwidth);\n\n      return {\n        move: scroll >= this.getMaxScroll() ? this.getMaxScroll() : scroll,\n      };\n    });\n  };\n\n  render() {\n    const { images } = this.props;\n    const {\n      step,\n      frameSize,\n      itemwidth,\n      animationDuration,\n      move: marginLeft,\n    } = this.state;\n\n    return (\n      <div className=\"content\">\n        <div className=\"carousel\">\n          <div className=\"carousel__wrapper\">\n            <button\n              type=\"button\"\n              className=\"btn btn--prev\"\n              disabled={this.state.move <= 0}\n              onClick={this.previousSlide}\n            >\n              &#10148;\n            </button>\n            <div className=\"carousel__container\" style={{ width: `${frameSize * itemwidth}px` }}>\n              <ul className=\"carousel__list\" style={{ transform: `translateX(${-marginLeft}px)`, transition: `${animationDuration}ms`, width: `${images.length * itemwidth}px` }}>\n                {images.map(imgUrl => (\n                  <li key={imgUrl} className=\"carousel__item\">\n                    <img src={imgUrl} alt=\"smile\" className=\"carousel__img\" width={itemwidth} />\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <button\n              type=\"button\"\n              disabled={this.state.move === this.getMaxScroll()}\n              className=\"btn btn--next\"\n              onClick={this.nextSlide}\n            >\n              &#10148;\n            </button>\n          </div>\n        </div>\n        <form className=\"form\">\n          <label htmlFor=\"frameSize\">\n            Frame Size:\n            &nbsp;\n            <input\n              type=\"number\"\n              name=\"\"\n              id=\"frameSize\"\n              min={1}\n              max={5}\n              step={1}\n              value={frameSize}\n              onChange={(event) => {\n                this.setState({\n                  frameSize: +event?.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"step\">\n            Rolling step:\n            &nbsp;\n            <input\n              type=\"number\"\n              name=\"\"\n              id=\"step\"\n              min={1}\n              max={3}\n              step={1}\n              value={step}\n              onChange={(event) => {\n                this.setState({\n                  step: +event?.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"itemWidth\">\n            Image width:\n            &nbsp;\n            <input\n              type=\"range\"\n              name=\"\"\n              id=\"itemWidth\"\n              min={60}\n              max={230}\n              value={itemwidth}\n              onChange={(event) => {\n                this.setState({\n                  itemwidth: +event?.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"animationDuration\">\n            Animation Duration:\n            &nbsp;\n            <input\n              type=\"range\"\n              name=\"\"\n              id=\"animationDuration\"\n              min={500}\n              max={3000}\n              value={animationDuration}\n              onChange={(event) => {\n                this.setState({\n                  animationDuration: +event?.target.value,\n                });\n              }}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__heading\">Lets roll :)</h1>\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}